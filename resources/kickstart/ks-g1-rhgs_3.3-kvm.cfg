# Kickstart RHGS 3.3 for Gluster Colonizer

# System authorization information
auth --enableshadow --passalgo=sha512

# Use CDROM installation media
cdrom

# Use text install
text

# Run the Setup Agent on first boot
firstboot --disable
ignoredisk --only-use=vda

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'

# System language
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp --device=eth1 --ipv6=auto --activate
network  --hostname=g1-fresh

# Firewall
# Service mdns for gluster-zeroconf
firewall --enabled --service=ssh --service=mdns

# Root password
rootpw redhat

# System services
services --enabled="chronyd"

# System timezone
timezone UTC

# Create ansible user
user --groups=wheel --name=ansible --gecos="ansible"

# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=vda

# System drive configuration
zerombr
clearpart --drives=vda --all --initlabel 
part /boot --fstype=xfs --size=1024 --ondrive=vda
part pv.01 --size=1024  --grow      --ondrive=vda
volgroup vg_g1 pv.01
logvol swap --vgname=vg_g1 --name=swap --size=1024
logvol /    --vgname=vg_g1 --name=root --fstype=xfs --size=1024 --grow

# Accept EULA
eula --agreed

# Automatic shutdown after installation
shutdown

# Packages and package groups to install
%packages
@RH-Gluster-Core
@RH-Gluster-NFS-Ganesha
#@RH-Gluster-Swift
@RH-Gluster-Tools
@RH-Gluster-Samba-Server
@RH-Gluster-AD-Integration
@scalable-file-systems
@base
@core
chrony
kexec-tools
nfs-utils
vim
vim-enhanced
net-tools
telnet
wget
mlocate
firewalld
sysstat
net-snmp-utils
redhat-support-tool
NetworkManager
NetworkManager-team
teamd
gstatus
ctdb
#Currently a conflict in dependency due to package name
#python-gluster

%end

# Enable kdump
%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%post

# Configure ansible user
# NOTE: This generates a new random ssh key, and it is expected
# that the kickstarted VM is then cloned so that all nodes
# have the same key for the initial deployment.
mkdir -m0700 /home/ansible/.ssh
yes | ssh-keygen -t rsa -N "" -f /home/ansible/.ssh/id_rsa
cp /home/ansible/.ssh/id_rsa.pub /home/ansible/.ssh/authorized_keys
chmod 0600 /home/ansible/.ssh/authorized_keys
chown -R ansible:ansible /home/ansible/.ssh
restorecon -R /home/ansible/.ssh
echo "UseDNS no" >> /etc/ssh/sshd_config
echo "ansible        ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers.d/ansible
sed -i "s/^.*requiretty/#Defaults requiretty/" /etc/sudoers

# Prep network interfaces
cat << EOF1 > /etc/sysconfig/network-scripts/ifcfg-eth0
TYPE="Ethernet"
BOOTPROTO="dhcp"
DEVICE="eth0"
NAME="eth0"
ONBOOT="yes"
IPV6INIT="no"
DEFROUTE="no"
IPV4_DHCP_TIMEOUT="99999999"
PEERDNS="no"
PEERROUTES="no"
EOF1

cat << EOF2 > /etc/sysconfig/network-scripts/ifcfg-eth1
TYPE="Ethernet"
BOOTPROTO="none"
DEVICE="eth1"
NAME="eth1"
ONBOOT="no"
IPV6INIT="no"
EOF2

# Restrict avahi daemon to the management interface eth0
sed -i s/^.*allow-interfaces.*$/allow-interfaces=eth0/ /etc/avahi/avahi-daemon.conf

# Recommended system panic configurations
ca << EOF3 > /etc/sysctl.d/panic.conf
kernel.unknown_nmi_panic = 1
kernel.softlockup_panic = 1
kernel.nmi_watchdog = 1
EOF3

# TODO: Install Colonizer components in /root/g1

%end
